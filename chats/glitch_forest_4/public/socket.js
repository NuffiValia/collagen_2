var socketjs=function(){"use strict";var e=function(e){try{if("string"!=typeof JSON.stringify(e))return!1}catch(e){return!1}return!0};return{isSupported:function(){return"undefined"!=typeof WebSocket},connect:function(t,n){if(void 0!==t&&"string"!=typeof t)throw"Invalid parameter: host";if(void 0!==n&&"boolean"!=typeof n)throw"Invalid parameter: secure";if(!socketjs.isSupported())throw"WebSockets are not supported";var o=((void 0===n?"https:"===location.protocol.toLowerCase():n)?"wss://":"ws://")+(void 0===t?window.location.host:t)+"/",r=null,a=!1,i=!1,c={},s=null,l=null,f=null,u=[],d=function(e){var t=new WebSocket(e);return t.onopen=p,t.onmessage=h,t.onclose=v,t},p=function(){if(i){i=!1,u.length>0&&u.splice(0,u.length);var t=null;if(null!==l&&(void 0===(t=l())&&(t=null),!e(t)))throw"Invalid reconnectData";u.push({type:"reconnect",reconnectData:t})}y()},h=function(e){var t=JSON.parse(e.data);"message"===t.type?void 0!==c[t.messageType]&&c[t.messageType](t.message):"close"===t.type&&m()},v=function(){if(!a){i||(i=!0,null!==s&&s());var e=setInterval((function(){if(!a)try{r=d(o)}catch(e){return}clearInterval(e)}),2e3)}},y=function(){if(a||i)u.length>0&&u.splice(0,u.length);else if(r.readyState===WebSocket.OPEN){for(var e=0;e<u.length;e+=1)r.send(JSON.stringify(u[e]));e>0&&u.splice(0,e)}},m=function(){a||(a=!0,r.readyState!==WebSocket.CLOSING&&r.readyState!==WebSocket.CLOSED&&r.close(),null!==f&&f())};return r=d(o),u.push({type:"connect"}),y(),{send:function(t,n){if("string"!=typeof t)throw"Invalid parameter: type";if(!e(n))throw"Invalid parameter: message";if(a)throw"Attempted to transmit after the connection has been closed";i||(u.push({type:"message",messageType:t,message:n}),y())},receive:function(e,t){if("string"!=typeof e)throw"Invalid parameter: type";if(null!==t&&"function"!=typeof t)throw"Invalid parameter: handler";if(a)throw"Attempted to set message handler after the connection has been closed";null===t?delete c[e]:c[e]=t},disconnect:function(e){if(null!==e&&"function"!=typeof e)throw"Invalid parameter: handler";if(a)throw"Attempted to set disconnect handler after the connection has been closed";s=e},reconnect:function(e){if(null!==e&&"function"!=typeof e)throw"Invalid parameter: handler";if(a)throw"Attempted to set reconnect handler after the connection has been closed";l=e},close:function(e){if(null!=e&&"function"!=typeof e)throw"Invalid parameter: handler";void 0===e?m():f=e}}}}}();"undefined"!=typeof module&&(module.exports=socketjs);